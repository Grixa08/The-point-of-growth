import React, { useState, useEffect } from 'react';
import './AllEvents.css';
import EventCard from '../components/EventCard';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∏–≤–µ–Ω—Ç–∞
export interface EventItem {
  id: string;
  title: string;
  type: string;
  company: string;
  date: string;
  isNew?: boolean;
  tags?: string[];
  imageUrl?: string;
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ –±–∞–Ω–Ω–µ—Ä–∞
const bannerSlides = [
  {
    id: 1,
    title: '–û–ª–∏–º–ø–∏–∞–¥—ã'
  },
  {
    id: 2,
    title: '–ö–æ–Ω–∫—É—Ä—Å—ã'
  },
  {
    id: 3,
    title: '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏'
  },
  {
    id: 4,
    title: '–í–∞–∫–∞–Ω—Å–∏–∏'
  }
];

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–æ—Ç–æ–º –∑–∞–º–µ–Ω—è—Ç—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Å –±—ç–∫–∞)
const mockEvents: EventItem[] = [
  {
    id: '1',
    title: '–û–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ',
    type: '–û–ª–∏–º–ø–∏–∞–¥–∞',
    company: '–û–û–û "–õ—É—á—à–∏–π–ò–Ω—Ñ–æ–ì–∏–≥–∞–Ω—Ç"',
    date: '12 —Å–µ–Ω—Ç—è–±—Ä—è',
    isNew: true,
    tags: ['Frontend', '2024'],
  },
  {
    id: '2',
    title: '–û–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ',
    type: '–û–ª–∏–º–ø–∏–∞–¥–∞',
    company: '–û–û–û "–ù–∞—É–∫–∞"',
    date: '15 —Å–µ–Ω—Ç—è–±—Ä—è',
    tags: ['Backend'],
  },
  {
    id: '3',
    title: '–û–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ',
    type: '–í–∞–∫–∞–Ω—Å–∏—è',
    company: '–û–û–û "–ù–∞—É–∫–∞"',
    date: '15 —Å–µ–Ω—Ç—è–±—Ä—è',
    tags: ['Backend'],
  },
  {
    id: '4',
    title: '–û–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ',
    type: '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞',
    company: '–û–û–û "–ù–∞—É–∫–∞"',
    date: '15 —Å–µ–Ω—Ç—è–±—Ä—è',
    tags: ['Backend'],
  },
  {
    id: '5',
    title: '–û–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ',
    type: '–ö–æ–Ω–∫—É—Ä—Å',
    company: '–û–û–û "–ù–∞—É–∫–∞"',
    date: '15 —Å–µ–Ω—Ç—è–±—Ä—è',
    tags: ['Backend'],
  },
];

function AllEvents() {
    const [currentSlide, setCurrentSlide] = useState(0);
    const [isAutoPlaying, setIsAutoPlaying] = useState(true);

    // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –∏–≤–µ–Ω—Ç–æ–≤
    const allTypes = ['–û–ª–∏–º–ø–∏–∞–¥–∞', '–ö–æ–Ω–∫—É—Ä—Å', '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞', '–í–∞–∫–∞–Ω—Å–∏—è'];

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏–≤–µ–Ω—Ç—ã –ø–æ —Ç–∏–ø—É
    const eventsByType: Record<string, EventItem[]> = {};
    allTypes.forEach(type => {
      eventsByType[type] = mockEvents.filter(e => e.type === type);
    });

    // –°–µ–∫—Ü–∏–∏ —Å –∏–≤–µ–Ω—Ç–∞–º–∏ (–Ω–µ –ø—É—Å—Ç—ã–µ)
    const nonEmptySections = allTypes.filter(type => eventsByType[type].length > 0);
    // –°–µ–∫—Ü–∏–∏ –±–µ–∑ –∏–≤–µ–Ω—Ç–æ–≤ (–ø—É—Å—Ç—ã–µ)
    const emptySections = allTypes.filter(type => eventsByType[type].length === 0);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
    useEffect(() => {
        if (!isAutoPlaying) return;

        const interval = setInterval(() => {
            setCurrentSlide((prev) => (prev + 1) % bannerSlides.length);
        }, 3000);

        return () => clearInterval(interval);
    }, [isAutoPlaying]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
    const goToSlide = (index: number) => {
        setCurrentSlide(index);
        setIsAutoPlaying(false);
        // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => setIsAutoPlaying(true), 5000);
    };




    return (
        <div className="all-events-container">
            {/* –í–µ—Ä—Ö–Ω–∏–π –±–∞–Ω–Ω–µ—Ä —Å –∫–∞—Ä—É—Å–µ–ª—å—é */}
            <div className="banner">
                <div className="banner-bg" />
                <div className="banner-carousel">
                    {bannerSlides.map((slide, index) => (
                        <div 
                            key={slide.id}
                            className={`banner-slide ${index === currentSlide ? 'active' : ''}`}
                            style={{
                                transform: `translateX(${(index - currentSlide) * 100}%)`
                            }}
                        >
                            <div className="banner-content">
                                <h2>{slide.title}</h2>
                                <button className="see-all-btn">See all</button>
                            </div>
                        </div>
                    ))}
                    
                </div>
                
                {/* –¢–æ—á–∫–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
                <div className="slider-dots">
                    {bannerSlides.map((_, index) => (
                        <span 
                            key={index}
                            className={`dot ${index === currentSlide ? 'active' : ''}`}
                            onClick={() => goToSlide(index)}
                        />
                    ))}
                </div>
            </div>

            {/* –°–Ω–∞—á–∞–ª–∞ —Å–µ–∫—Ü–∏–∏ —Å –∏–≤–µ–Ω—Ç–∞–º–∏ */}
            {nonEmptySections.map((type, idx) => (
              <div className={`section${idx === 0 ? ' first-section' : ''}`} key={type}>
                <div className="section-header">
                  <h3>{type}</h3>
                  <button className="btn-event">–í—Å–µ</button>
                </div>
                <div className="events-list">
                  {eventsByType[type].map(event => (
                    <EventCard key={event.id} {...event} />
                  ))}
                </div>
              </div>
            ))}

            {/* –ü–æ—Ç–æ–º —Å–µ–∫—Ü–∏–∏ –±–µ–∑ –∏–≤–µ–Ω—Ç–æ–≤ (–ø—É—Å—Ç—ã–µ) */}
            {emptySections.map(type => (
              <div className={"section empty-section"} key={type}>
                <h3>{type}</h3>
                <div className="events-list empty-list">
                  <div className="empty-events-placeholder">–ü–æ–∫–∞ –Ω–µ—Ç –∏–≤–µ–Ω—Ç–æ–≤</div>
                </div>
              </div>
            ))}

            {/* –ù–∏–∂–Ω–µ–µ –º–µ–Ω—é */}
            <div className="bottom-nav">
                <div className="nav-item active">
                    <span role="img" aria-label="events">üìÖ</span>
                    <div>–í—Å–µ –∏–≤–µ–Ω—Ç—ã</div>
                </div>
                <div className="nav-item">
                    <span role="img" aria-label="my-events">üîî</span>
                    <div>–ú–æ–∏ –∏–≤–µ–Ω—Ç—ã</div>
                </div>
                <div className="nav-item">
                    <span role="img" aria-label="account">üë§</span>
                    <div>–ê–∫–∫–∞—É–Ω—Ç</div>
                </div>
            </div>
        </div>
    )
}

export default AllEvents;